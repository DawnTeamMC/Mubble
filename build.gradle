buildscript
{
	repositories
	{
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies
	{
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'java'
apply plugin: 'eclipse'

repositories
{
	maven { url 'https://maven.tterrag.com/' }
	maven { url 'https://maven.blamejared.com' }
}

version = mod_version
group = "hugman.${mod_id}"
archivesBaseName = "${mod_name}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft
{
	mappings channel: 'snapshot', version: "${mappings_version}"

	accessTransformer = file('src/main/resources/META-INF/accessTransformers.cfg')

	runs
	{
		client
		{
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			property 'fml.earlyprogresswindow', 'false'

			mods
			{
				mubble
				{
					source sourceSets.main
				}
			}
		}
		server
		{
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			property 'fml.earlyprogresswindow', 'false'

			mods
			{
				mubble
				{
					source sourceSets.main
				}
			}
		}
		data
		{
			workingDirectory project.file('run')

			property 'forge.logging.markers', ''
			property 'forge.logging.console.level', 'debug'

			args '--mod', 'mubble', '--all', '--output', file('src/generated/resources/')

			mods
			{
				mubble
				{
					source sourceSets.main
				}
			}
		}
	}
}

dependencies
{
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	
	compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
	runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
}

jar
{
	manifest
	{
		attributes
		([
			"Specification-Title": "${mod_id}",
			"Specification-Vendor": "Hugman",
			"Specification-Version": "1",
			"Implementation-Title": "${mod_id}",
			"Implementation-Version": "${mod_version}",
			"Implementation-Vendor" :"Hugman",
			"Implementation-Timestamp": new Date().format("dd-MM-yyyy'T'HH:mm:ssZ")
		])
	}

	exclude "**/*.bat"
	exclude "**/*.psd"
	exclude "**/*.exe"
}